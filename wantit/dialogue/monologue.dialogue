# salesroom
~ door_to_store
set GlobalTimer.add_log_entry("start Monologue: door_to_store")
An der Tür sind keine Einbruchsspuren zu erkennen. Der Dieb muss einen Dietrich oder einen Schlüssel gehabt haben.
if CaseManager.CaseGlobals.door_inspected == false:
	An der Tür sind keine Einbruchsspuren zu erkennen. Der Dieb muss einen Dietrich oder einen Schlüssel gehabt haben.
set GlobalTimer.add_log_entry("end Monologue: door_to_store")
=> END

~ bitten_waffle
set GlobalTimer.add_log_entry("start Monologue: bitten_waffle")
set GlobalTimer.end_timer("waffle")
Da scheint jemand Hunger gehabt zu haben.
set CaseManager.CaseGlobals.waffle_collected = true
set GlobalTimer.add_log_entry("end Monologue: bitten_waffle")
=> END

# bakers office
~ shoe_prints_office
set GlobalTimer.add_log_entry("start Monologue: shoe_prints_office")
set GlobalTimer.end_timer("shoeprints_office")
if CaseManager.CaseGlobals.traces_in_bakery_inspected: 
	Hier endet die Mehlspur.
	set CaseManager.CaseGlobals.traces_in_office_inspected = true
else:
	Sieht so aus, als wäre der Dieb in Mehl getreten.
	set CaseManager.CaseGlobals.traces_in_office_inspected = true
set GlobalTimer.add_log_entry("end Monologue: shoe_prints_office")
=> END

~ inventory
set GlobalTimer.add_log_entry("start Monologue: inventory")
Du kannst manche Gegenstände im Inventar benutzen.
set CaseManager.CaseGlobals.inventory_explained = true
set GlobalTimer.add_log_entry("end Monologue: inventory")
=> END

# Safe in office
~ pliers
set GlobalTimer.end_timer("pliers")
set GlobalTimer.add_log_entry("start Monologue: pliers")
Damit wollte der Dieb wohl den Safe aufbrechen.
set CaseManager.CaseGlobals.pliers_collected = true
set GlobalTimer.add_log_entry("end Monologue: pliers")
=> END

~ screwdriver
set GlobalTimer.end_timer("screwdriver")
set GlobalTimer.add_log_entry("start Monologue: screwdriver")
Damit hat der Dieb scheinbar den Safe aufgebrochen.
set CaseManager.CaseGlobals.screwdriver_collected = true
set GlobalTimer.add_log_entry("end Monologue: screwdriver")
=> END

~ fingerprints
set GlobalTimer.end_timer("fingerprints")
set GlobalTimer.add_log_entry("start Monologue: fingerprints")
Die Fingerabdrücke müssen wir unbedingt sichern.
set CaseManager.CaseGlobals.fingerprints_saved = true
set GlobalTimer.add_log_entry("end Monologue: fingerprints")
=> END

~ key_on_safe
set GlobalTimer.add_log_entry("start Monologue: key_on_safe")
Der Schlüssel passt nicht.
set GlobalTimer.add_log_entry("end Monologue: key_on_safe")
=> END

~ key_on_door
set GlobalTimer.add_log_entry("start Monologue: key_on_door")
set GlobalTimer.end_timer("door")
Der Schlüssel passt. Der Dieb hatte also einen Schlüssel zum Laden.
set CaseManager.CaseGlobals.door_inspected = true
set CaseManager.clue_found()
set GlobalTimer.add_log_entry("end Monologue: key_on_door")
=> END

# bakery
~ shoe_prints_bakery
set GlobalTimer.add_log_entry("start Monologue: shoe_prints_bakery")
set GlobalTimer.end_timer("shoeprints_bakery")
Sieht so aus, als wäre der Dieb in Mehl getreten. Die Spur führt ins Büro des Ladens.
set CaseManager.CaseGlobals.traces_in_bakery_inspected = true
set GlobalTimer.add_log_entry("end Monologue: shoe_prints_bakery")
=> END

~ fallen_flour_sack
set GlobalTimer.add_log_entry("start Monologue: fallen_flour_sack")
set GlobalTimer.end_timer("flour")
if CaseManager.CaseGlobals.traces_in_bakery_inspected:
	Das ist also der Ursprung der Mehlspuren.
	set CaseManager.CaseGlobals.flour_sack_inspected = true
else:
	Sieht so aus, als wäre jemand über den Mehlsack gestolpert. 
	set CaseManager.CaseGlobals.flour_sack_inspected = true
if not GlobalTimer.timer_active("key"):
	set GlobalTimer.start_timer("key")
set GlobalTimer.add_log_entry("end Monologue: fallen_flour_sack")
=> END

~ flour_sack_pushed
set GlobalTimer.end_timer("key")
set GlobalTimer.add_log_entry("start Monologue: flour_sack_pushed")
Ein Schlüssel…den muss der Dieb verloren haben. Vielleicht gibt es hier ein passendes Schloss.
set CaseManager.CaseGlobals.key_collected = true
if not GlobalTimer.timer_active("door"):
	set GlobalTimer.start_timer("door")
set GlobalTimer.add_log_entry("end Monologue: flour_sack_pushed")
=> END

~ minigame1_start
set GlobalTimer.add_log_entry("start Monologue: minigame1_start")
set GlobalTimer.start_timer("minigame 1")
Na toll, jetzt müssen wir die Klebezettel wieder den richtigen Tütchen zuordnen.
Die Abbildungen der gesicherten Spuren und die Klebezettelchen stellen Daten dar. 
Klicke auf die Abbildungen, um die Spuren zu untersuchen. So findest du heraus, welche Informationen durch die Daten repräsentiert werden.
Die Spuren allein bringen mir nichts. Das sind einfach nur Daten. Ich brauche mehr Kontext, um sie zu verstehen.
Wenn ich mir die Spuren mit der Lupe genauer anschaue, finde ich vielleicht heraus welche Information dahintersteckt.
set GlobalTimer.add_log_entry("end Monologue: minigame1_start")
=> END

~ minigame1_end
set GlobalTimer.add_log_entry("start Monologue: minigame1_end")
Geschafft!
set GlobalTimer.add_log_entry("end Monologue: minigame1_end")
=> minigame1_test1

~ minigame1_test1
set GlobalTimer.add_log_entry("start Monologue: minigame1_test1 ")
Die gesicherten Spuren und Notizzettel sind...
- Daten
	set GlobalTimer.add_log_entry("end Monologue: minigame1_test1 => daten")
	=> minigame1_test2
- Informationen
	set GlobalTimer.add_log_entry("end Monologue: minigame1_test1 => informationen")
	=> explain_test1
- Ich verstehe die Begriffe nicht.
	set GlobalTimer.add_log_entry("end Monologue: minigame1_test1 => verstehe nicht")
	=> explain_test1

=> END

~ explain_test1
set GlobalTimer.add_log_entry("start Monologue: explain_test1")
Daten sind einzelne Dinge wie Wörter, Zahlen, Bilder Töne oder sonst was, die für sich allein noch nichts sagen. 
Eine Information entsteht, wenn diese Daten für uns eine Bedeutung bekommen.
set GlobalTimer.add_log_entry("end Monologue: explain_test1")
=> minigame1_test1

~ minigame1_test2
set GlobalTimer.add_log_entry("start Monologue: explain_test2")
Mittels der Lupe konnte ich sie...
- interpretieren
	set GlobalTimer.add_log_entry("end Monologue: minigame1_test2 => interpretieren")
	=> minigame1_test3
- repräsentieren
	set GlobalTimer.add_log_entry("end Monologue: minigame1_test2 => repräsentieren")
	=> explain_test2
- Ich verstehe die Begriffe nicht.
	set GlobalTimer.add_log_entry("end Monologue: minigame1_test2 => verstehe nicht")
	=> explain_test2

~ explain_test2
set GlobalTimer.add_log_entry("start Monologue: explain_test2")
Interpretieren bedeutet, etwas so zu verstehen, dass man den Sinn oder die Absicht dahinter erkennt.
Repräsentieren hingegen bedeutet, eine Darstellung durch eine andere Darstellung so abzubilden, dass sie stellvertretend für das Original stehen.
set GlobalTimer.add_log_entry("end Monologue: explain_test2")
=> minigame1_test2

~ minigame1_test3
set GlobalTimer.add_log_entry("start Monologue: minigame1_test3")
Die gewonnene Information konnte wiederum durch die Zettelchen...
- interpretiert werden
	set GlobalTimer.add_log_entry("end Monologue: minigame1_test3 => interpretiert werden")
	=> explain_test3
- repräsentiert werden
	set GlobalTimer.end_timer("minigame 1")
	set GlobalTimer.add_log_entry("end Monologue: minigame1_test3 => repräsentiert werden")
	=> END

~ explain_test3
set GlobalTimer.add_log_entry("start Monologue: explain_test3")
Die Notizzettel helfen die Information darzustellen.
Interpretieren bedeutet, etwas so zu verstehen, dass man den Sinn oder die Absicht dahinter erkennt.
Repräsentieren hingegen bedeutet, eine Darstellung durch eine andere Darstellung so abzubilden, dass sie stellvertretend für das Original stehen.
set GlobalTimer.add_log_entry("end Monologue: explain_test3")
=> minigame1_test3

~ office
set GlobalTimer.add_log_entry("start Monologue: office")
Auf der Hinweistafel werden alle wichtigen Bestandteile des Falls gesammelt. So kannst du auch später noch nachvollziehen, was in dem Fall passiert ist.
Der Zeitstrahl zeigt an, wann was passiert ist und wo du dich derzeit im Fall befindest. Am Anfang steht die ausgeübte Tat.
Auf dem Zeitstrahl werden auch die Rätsel angezeigt, die du lösen musstest.
Außerdem werden alle gesammelten Spuren angezeigt.
Neben den Spuren werden auch alle involvierten Personen angezeigt. Später kannst du dadurch mögliche Täter identifizieren.
set GlobalTimer.add_log_entry("end Monologue: office")
=> END
